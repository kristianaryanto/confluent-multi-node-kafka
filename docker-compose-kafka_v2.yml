version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper 
    volumes:
      - zoo-stack-data:/tmp/zookeeper
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 2181:2181
    networks:
      - kafka-clust
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  kafka1:
    image: confluentinc/cp-server:7.5.0
    hostname: kafka1
    volumes:
      - kafka-stack-1-logs:/tmp/kafka-logs
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    networks:
      - kafka-clust
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.kafka==1
          # - node.role == manager
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://172.24.168.38:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      # CONFLUENT_METRICS_ENABLE: 'true'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  kafka2:
    image: confluentinc/cp-server:7.5.0
    hostname: kafka2
    # container_name: kafka2
    volumes:
      - kafka-stack-2-logs:/tmp/kafka-logs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9094:9094
    networks:
      - kafka-clust
    depends_on:
      - zookeeper
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.kafka==2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://172.24.168.37:9094"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka2:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      # CONFLUENT_METRICS_ENABLE: 'true'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
    networks:
      - kafka-clust
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.kafka==1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka1:9092,PLAINTEXT://kafka2:9092"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081


networks:
  kafka-clust:
    driver: overlay

volumes:
  kafka-stack-1-logs:
  kafka-stack-2-logs:
  zoo-stack-data:
